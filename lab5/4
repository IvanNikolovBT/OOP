#include <iostream>
#include <cstring>
using namespace std;

class PlDrustvo {
private:
    char * ime;
    int turi;
    int clenovi;
public:
    PlDrustvo() {
        ime = NULL;
        turi = 0;
        clenovi = 0;
    }
    PlDrustvo(int cl) {
        clenovi = cl;
    }
    PlDrustvo(char * i, int t, int c) {
        ime = new char[strlen(i)+1];
        strcpy(ime, i);
        turi = t;
        clenovi = c;
    }
    PlDrustvo(const PlDrustvo &p) {
        this->ime=new char[strlen(p.ime)+1];
        strcpy(this->ime,p.ime);
        this->clenovi=p.clenovi;
        this->turi=p.turi;
    }
    PlDrustvo operator+(PlDrustvo &d) {
        if(clenovi > d.clenovi) {
            PlDrustvo dr(ime,turi,this->clenovi+d.clenovi);
            return dr;
        }
         PlDrustvo dr(d.ime,d.turi,this->clenovi+d.clenovi);
         return dr;
    }
    bool operator>(PlDrustvo &d) {
        return clenovi > d.clenovi;
    }
    bool operator<(PlDrustvo &d) {
        return clenovi < d.clenovi;
    }
    friend ostream &operator<<(ostream &out, PlDrustvo &d) {
        out<<"Ime: "<<d.ime<<" Turi: "<<d.turi<<" Clenovi: "<<d.clenovi<<endl;
        return out;
    }

};

void najmnoguClenovi(PlDrustvo d[], int br) {
    PlDrustvo maxClen(0);
    int maxClena=0;
    for(int i=0; i<br; i++) {
        if(d[i] > maxClen) {
            maxClen = d[i];
            maxClena = i;
        }
    }
     cout<<"Najmnogu clenovi ima planinarskoto drustvo: "<<d[maxClena]<<endl;
}

int main()
{        		
    PlDrustvo drustva[3];
    PlDrustvo pl;
    for (int i=0;i<3;i++)
   	{
    	char ime[100];
    	int brTuri;
    	int brClenovi;
    	cin>>ime;
    	cin>>brTuri;
    	cin>>brClenovi;
    	PlDrustvo p(ime,brTuri,brClenovi);
        drustva[i] = p;
    	
   	}
    
    pl = drustva[0] + drustva[1];
    cout<<pl;
    
    najmnoguClenovi(drustva, 3);
    
    return 0;
}
