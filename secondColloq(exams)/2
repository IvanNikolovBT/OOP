#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

class Vozac {
protected:
    char name[100];
    int age;
    int races;
    bool veteran;
public:
    Vozac () {
        races = 0;
        veteran = false;
        age = 0;
        strcpy(name, "");
    }
    Vozac(char * name, int age, int races, bool veteran) {
        strcpy(this->name, name);
        this->age = age;
        this->races = races;
        this->veteran = veteran;
    }
    friend ostream & operator<<(ostream &out, Vozac &v) {
        out<<v.name<<endl;
        out<<v.age<<endl;
        out<<v.races<<endl;
        if(v.veteran == true)
           out<<"VETERAN"<<endl;
        return out;
    }
    virtual double zarabotuvacka_trka()=0;
	virtual double danok()=0;
};

bool operator==(Vozac * v1, Vozac &v2) {
    return v1->zarabotuvacka_trka() == v2.zarabotuvacka_trka();
}

class Avtomobilist : public Vozac {
private:
    double price;
public:
    Avtomobilist () {
        price = 0;
    }
    Avtomobilist(char * name, int age, int races, bool veteran, double price) : Vozac(name,age,races,veteran) {
        this->price = price;
    }
    double zarabotuvacka_trka() {
        return price / 5;
    }
    double danok() {
        if(races > 10) {
            return zarabotuvacka_trka()*0.15;
        }
        return zarabotuvacka_trka()*0.1;
    }
};

class Motociklist : public Vozac {
private:
    int kW;
public:
    Motociklist() {
        kW = 0;
    }
    Motociklist(char * name, int age, int races, bool veteran, int kW) : Vozac(name,age,races,veteran) {
        this->kW = kW;
    }
    double zarabotuvacka_trka() {
        return kW*20;
    }
    double danok() {
        if(veteran == true) {
            return zarabotuvacka_trka()*0.25;
        }
        return zarabotuvacka_trka()*0.20;
    }
};

int soIstaZarabotuvachka(Vozac ** v, int n, Vozac * dr) {
    int counter = 0;
    for(int i=0; i<n; i++) {
        if(v[i]->zarabotuvacka_trka() == dr->zarabotuvacka_trka()) {
            counter++;
        }
    }
    return counter;
}

int main() {
	int n, x;
	cin >> n >> x;
	Vozac **v = new Vozac*[n];
	char ime[100];
	int vozrast;
	int trki;
	bool vet;
	for(int i = 0; i < n; ++i) {
		cin >> ime >> vozrast >> trki >> vet;
		if(i < x) {
			float cena_avto;
			cin >> cena_avto;
			v[i] = new Avtomobilist(ime, vozrast, trki, vet, cena_avto);
		} else {
			int mokjnost;
			cin >> mokjnost;
			v[i] = new Motociklist(ime, vozrast, trki, vet, mokjnost);
		}
	}
	cout << "=== DANOK ===" << endl;
	for(int i = 0; i < n; ++i) {
		cout << *v[i];
		cout << v[i]->danok() << endl;
	}
	cin >> ime >> vozrast >> trki >> vet;
	int mokjnost;
	cin >> mokjnost;
	Vozac *vx = new Motociklist(ime, vozrast, trki, vet, mokjnost);
	cout << "=== VOZAC X ===" << endl;
	cout << *vx;
	cout << "=== SO ISTA ZARABOTUVACKA KAKO VOZAC X ===" << endl;
	cout << soIstaZarabotuvachka(v, n, vx);
    for(int i = 0; i < n; ++i) {
        delete v[i];
    }
    delete [] v;
    delete vx;
	return 0;
}
