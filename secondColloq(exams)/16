#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

class Transport {
protected:
    char podatoci[20];
    double cena;
    int rastojanie;
public:
    Transport () {
        strcpy(podatoci,"");
        cena = 0.0;
        rastojanie = 0;
    }
    Transport(char * podatoci, double cena, int rastojanie) {
        strcpy(this->podatoci, podatoci);
        this->cena = cena;
        this->rastojanie = rastojanie;
    }
    virtual double cenaTransport() = 0;
    int getRastojanie() {
        return rastojanie;
    }
    bool operator<(Transport &t) {
        return rastojanie < t.rastojanie;
    }
    friend ostream& operator<<(ostream &out, Transport &t) {
        out<<t.podatoci<<" "<<t.rastojanie<<" "<<t.cenaTransport()<<endl;
    }
};


class AvtomobilTransport : public Transport {
private:
    bool daliShofer;
public:
    AvtomobilTransport(char * podatoci, double cena, int rastojanie, bool daliShofer = false) : Transport(podatoci,cena,rastojanie) {
        this->daliShofer = daliShofer;
    }
    double cenaTransport () {
        if(daliShofer) {
            return cena * 1.20;
        }
        return cena;
    }
};

class KombeTransport : public Transport {
private:
    int lugje;
public:
    KombeTransport(char * podatoci, double cena, int rastojanie, int lugje = 0) : Transport(podatoci,cena,rastojanie) {
        this->lugje = lugje;
    }
    double cenaTransport() {
        return cena - (lugje*200);
    }
};

void pecatiPoloshiPonudi(Transport ** ponudi, int n, Transport & t) {
    Transport * tmp;
    for(int i=0; i<n-1; i++) {
        for(int j=i+1; j<n; j++) {
            if(ponudi[i]->cenaTransport() > ponudi[j]->cenaTransport()) {
                tmp = ponudi[i];
                ponudi[i] = ponudi[j];
                ponudi[j] = tmp;
            }
        }
    }
    for(int i=0; i<n; i++) {
        if(ponudi[i]->cenaTransport() > t.cenaTransport()) {
            cout<<*ponudi[i];
        }
    }
}

int main(){
    char destinacija[20];
    int tip,cena,rastojanie,lugje;
    bool shofer;
    int n;
    cin>>n;
    Transport  **ponudi;
    ponudi=new Transport *[n];

    for (int i=0;i<n;i++){

        cin>>tip>>destinacija>>cena>>rastojanie;
        if (tip==1) {
            cin>>shofer;
            ponudi[i]=new AvtomobilTransport(destinacija,cena,rastojanie,shofer);

        }
        else {
            cin>>lugje;
            ponudi[i]=new KombeTransport(destinacija,cena,rastojanie,lugje);
        }


    }

    AvtomobilTransport nov("Ohrid",2000,600,false);
    pecatiPoloshiPonudi(ponudi,n,nov);

    for (int i=0;i<n;i++) delete ponudi[i];
    delete [] ponudi;
    return 0;

}
