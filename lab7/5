#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

class ZicanInstrument {
protected:
    char ime[20];
    int brZici;
    int Pcena;
public:
    ZicanInstrument(char * ime = "", int brZici = 0, int Pcena = 0) {
        strcpy(this->ime, ime);
        this->brZici = brZici;
        this->Pcena = Pcena;
    }

    virtual double cena() = 0;

    int getBroj() {
        return brZici;
    }

    friend bool operator ==(ZicanInstrument *z1,ZicanInstrument &z2)
    {
        if(z1->getBroj() == z2.getBroj())
            return true;
        return false;
    }
    friend ostream &operator<<(ostream &out,ZicanInstrument *z)
    {
        out<<z->ime<<" "<<z->brZici<<" "<<z->Pcena<<endl;
        return out;
    }
};

class Mandolina : public ZicanInstrument {
private:
    char forma[20];
public:
    Mandolina(char * ime = "", int brZici = 0, int Pcena = 0, char * forma="") : ZicanInstrument(ime,brZici,Pcena) {
        strcpy(this->forma, forma);
    }

    double cena() {
        if(strcmp(forma,"Neapolitan") == 0) {
            return Pcena * 1.15;
        }
        return Pcena;
    }
    friend ostream & operator <<(ostream &out,Mandolina &m)
    {
        out<<m.ime<<" " <<m.brZici<<" " <<m.cena()<<" " <<m.forma<<endl;
        return out;
    }
};

class Violina : public ZicanInstrument {
private:
    double golemina;
public:
    Violina(char * ime = "", int brZici = 0, int Pcena = 0, double golemina = 0) : ZicanInstrument(ime,brZici,Pcena) {
        this->golemina = golemina;
    }

    double cena () {
        if(golemina == 0.25) {
            return Pcena * 1.10;
        }
        else if(golemina == 1.0) {
            return Pcena * 1.20;
        }
        return Pcena;
    }

    friend ostream & operator <<(ostream &out,Violina &v)
    {
        out<<v.ime<<" " <<v.brZici<<" " <<v.cena()<<" " <<v.golemina<<endl;
        return out;
    }
};

void pecatiInstrumenti(ZicanInstrument &z1,ZicanInstrument **niza, int n)
{
    for(int i=0;i<n;i++)
    {
        if(niza[i]==z1)
        {
            Mandolina *m=dynamic_cast<Mandolina*>(niza[i]);
            if(m != 0)
            {
                cout<<m->cena()<<endl;
            }
            Violina *v=dynamic_cast<Violina*>(niza[i]);
            if(v != 0)
            {
                cout<<v->cena()<<endl;
            }
        }
    }
}
void pecati(ZicanInstrument **niza, int n)
{
    for(int i=0;i<n;i++)
    {
        cout<<niza[i];
    }
}


int main() {
	char ime[20];
	int brojZici;
	float cena;
	char forma[20];
	cin >> ime >> brojZici >> cena >> forma;
	Mandolina m(ime, brojZici, cena, forma);
	int n;
	cin >> n;
	ZicanInstrument **zi = new ZicanInstrument*[2 * n];
	for(int i = 0; i < n; ++i) {
		cin >> ime >> brojZici >> cena >> forma;
		zi[i] = new Mandolina(ime, brojZici, cena, forma);
	}
	for(int i = 0; i < n; ++i) {
		float golemina;
		cin >> ime >> brojZici >> cena >> golemina;
		zi[n + i] = new Violina(ime, brojZici, cena, golemina);
	}
	pecatiInstrumenti(m, zi, 2 * n);
	for(int i = 0; i < 2 * n; ++i) {
		delete zi[i];
	}
	delete [] zi;
	return 0;
}
